import axios from 'axios';

const VERCEL_API_URL = 'https://api.vercel.com/v1';
const GITHUB_API_URL = 'https://api.github.com';

export const pushToGitHub = async (code, name) => {
  try {
    // First, create a new repository
    const createRepoResponse = await axios.post(
      `${GITHUB_API_URL}/user/repos`,
      {
        name,
        description: 'Generated by AI Code Generator',
        private: false,
        auto_init: true
      },
      {
        headers: {
          Authorization: `token ${process.env.VITE_GITHUB_TOKEN}`,
          Accept: 'application/vnd.github.v3+json'
        }
      }
    );

    const repoUrl = createRepoResponse.data.html_url;
    const repoName = createRepoResponse.data.full_name;

    // Then, push the code to the repository
    // This would typically involve:
    // 1. Creating a new branch
    // 2. Adding all files
    // 3. Creating a commit
    // 4. Pushing to GitHub

    return repoUrl;
  } catch (error) {
    console.error('Error pushing to GitHub:', error);
    throw new Error('Failed to push code to GitHub');
  }
};

export const deployToVercel = async (githubUrl) => {
  try {
    // Create a new Vercel project
    const createProjectResponse = await axios.post(
      `${VERCEL_API_URL}/projects`,
      {
        name: githubUrl.split('/').pop(),
        gitRepository: {
          type: 'github',
          repo: githubUrl.split('/').slice(-2).join('/')
        }
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.VITE_VERCEL_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );

    // Trigger a deployment
    const deployResponse = await axios.post(
      `${VERCEL_API_URL}/deployments`,
      {
        name: createProjectResponse.data.name,
        projectId: createProjectResponse.data.id
      },
      {
        headers: {
          Authorization: `Bearer ${process.env.VITE_VERCEL_TOKEN}`,
          'Content-Type': 'application/json'
        }
      }
    );

    return deployResponse.data.url;
  } catch (error) {
    console.error('Error deploying to Vercel:', error);
    throw new Error('Failed to deploy to Vercel');
  }
}; 